// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        Int        @id @default(autoincrement())
    name      String
    email     String     @unique
    password  String
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
    orders    Order[]
    cartItems CartItem[]
}

model Product {
    id          Int         @id @default(autoincrement())
    name        String
    description String
    price       Float
    stock       Int
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    category    Category    @relation(fields: [categoryId], references: [id])
    categoryId  Int
    orderItems  OrderItem[]
    CartItem CartItem[]
}

model Category {
    id       Int       @id @default(autoincrement())
    name     String
    products Product[]
}

model Order {
    id         Int         @id @default(autoincrement())
    user       User        @relation(fields: [userId], references: [id])
    userId     Int
    createdAt  DateTime    @default(now())
    status     OrderStatus
    orderItems OrderItem[]
}

model OrderItem {
    id        Int     @id @default(autoincrement())
    order     Order   @relation(fields: [orderId], references: [id])
    orderId   Int
    product   Product @relation(fields: [productId], references: [id])
    productId Int
    quantity  Int
    price     Float
}

model CartItem {
    id        Int     @id @default(autoincrement())
    user      User    @relation(fields: [userId], references: [id])
    userId    Int
    product   Product @relation(fields: [productId], references: [id])
    productId Int
    quantity  Int
}

enum OrderStatus {
    PENDING
    SHIPPED
    DELIVERED
    CANCELLED
}
